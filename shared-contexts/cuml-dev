
function cumlSrcDir() {
    local file="CMakeCache.txt"
    if [ ! -e "$file" ]; then
        echo "Error! Not inside cuml cmake build folder!!" 1>&2
        return 1
    fi
    local cppDir=`grep CUML_SOURCE_DIR "$file" | sed -e 's/.*=//'`
    dirname $cppDir
}

function cumlFixClangFormat() {
    local dir=`cumlSrcDir`
    if [ "$?" != "0" ]; then
        return 1
    fi
    pushd $dir
    python ./cpp/scripts/run-clang-format.py -inplace
    local changes=`git status -s`
    if [ "$changes" != "" ]; then
        echo "There seem to be clang-format fixes present. Committing them..."
        git add cpp/ && git commit -m 'FIX clang-format fixes'
    else
        echo "No clang-format fixes."
    fi
    popd
}

function cumlClangTidy() {
    local cwd=`pwd`
    local dir=`cumlSrcDir`
    if [ "$?" != "0" ]; then
        return 1
    fi
    pushd $dir
    python ./cpp/scripts/run-clang-tidy.py -cdb $cwd/compile_commands.json
    popd
}

function cumlCmakeCommand() {
    time cmake \
         -DBLAS_LIBRARIES=$CONDA_PREFIX/lib/libopenblas.so.0 \
         -DBUILD_CUML_STD_COMMS=ON \
         ../../cuml/cpp
}

function cumlCppBuild() {
    time make -j $*
}

function cumlCppTest() {
    local file="CMakeCache.txt"
    if [ ! -e "$file" ]; then
        echo "Error! Not inside cuml cmake build folder!!" 1>&2
        return 1
    fi
    ./test/prims && ./test/ml
}

function cumlPyBuild() {
    local opts=$*
    local cwd=`pwd`
    local dir=`cumlSrcDir`
    if [ "$?" != "0" ]; then
        return 1
    fi
    pushd $dir/python
    cp $cwd/comms/std/libcumlcomms.so $cwd
    env CUML_BUILD_PATH=$cwd \
        LD_LIBRARY_PATH=$cwd:$LD_LIBRARY_PATH \
        python setup.py build_ext --inplace $opts
    popd
}

function cumlPyTest() {
    local tests=${1:-cuml/test}
    local cwd=`pwd`
    local dir=`cumlSrcDir`
    if [ "$?" != "0" ]; then
        return 1
    fi
    pushd $dir/python
    env LD_LIBRARY_PATH=$cwd:$LD_LIBRARY_PATH \
        py.test -v $tests
    popd
}

function cumlFlake8() {
    local dir=`cumlSrcDir`
    if [ "$?" != "0" ]; then
        return 1
    fi
    pushd $dir
    flake8 --exclude=cpp,thirdparty,__init__.py,versioneer.py,python/_external_repositories && \
        flake8 --config=python/.flake8.cython
    popd
}

source activate cuml_dev
