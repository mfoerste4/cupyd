
function raftSrcDir() {
    local file="CMakeCache.txt"
    if [ ! -e "$file" ]; then
        echo "Error! Not inside raft cmake build folder!!" 1>&2
        return 1
    fi
    local cppDir=`grep RAFT_SOURCE_DIR "$file" | sed -e 's/.*=//'`
    dirname $cppDir
}

function raftFixClangFormat() {
    local dir=`raftSrcDir`
    if [ "$?" != "0" ]; then
        return 1
    fi
    pushd $dir
    python ./cpp/scripts/run-clang-format.py -inplace
    local changes=`git status -s`
    if [ "$changes" != "" ]; then
        echo "There seem to be clang-format fixes present. Committing them..."
        git add cpp/ && git commit -m 'FIX clang-format fixes'
    else
        echo "No clang-format fixes."
    fi
    popd
}

function raftClangTidy() {
    local cwd=`pwd`
    local dir=`raftSrcDir`
    if [ "$?" != "0" ]; then
        return 1
    fi
    pushd $dir
    python ./cpp/scripts/run-clang-tidy.py -cdb $cwd/compile_commands.json
    popd
}

function raftCmakeCommand() {
    time cmake ../../raft/cpp
}

function raftCppBuild() {
    time make -j $*
}

function raftCppTest() {
    local file="CMakeCache.txt"
    if [ ! -e "$file" ]; then
        echo "Error! Not inside raft cmake build folder!!" 1>&2
        return 1
    fi
    ./test_raft
}

function raftPyBuild() {
    local cwd=$(basename $(pwd))
    local dir=`raftSrcDir`
    if [ "$?" != "0" ]; then
        return 1
    fi
    pushd $dir/python
    env RAFT_BUILD_PATH=$cwd python setup.py build_ext --inplace
    popd
}

function raftPyTest() {
    local cwd=`pwd`
    local dir=`raftSrcDir`
    if [ "$?" != "0" ]; then
        return 1
    fi
    pushd $dir/python
    env LD_LIBRARY_PATH=$cwd:$LD_LIBRARY_PATH py.test -v $*
    popd
}

source activate cuml_dev
